<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://java.sun.com/xml/ns/javaee" 
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
id="WebApp_ID" version="3.0">

  <display-name>Archetype Created Web Application</display-name>
  
  <!-- 告诉ContextLoaderListener叫在spring的配置文档的位置-->
  <context-param> 
     <param-name>contextConfigLocation</param-name> 
     <param-value> 
         classpath:spring-shiro-web.xml,
         /WEB-INF/spring-servlet.xml  
     </param-value> 
 </context-param> 
 
	<filter>
		<!-- DelegatingFilterProxy是一个委派类型的过滤器，为了解决spring-servlet还没有加载时就执行了shiro的过滤器问题，
		 DelegatingFilterProxy此过滤器的特点就是会将过滤器的生命周期全部委派给spring进行管理 -->
	    <filter-name>shiroFilter</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	  <!--   将过滤器的从出生到消亡全部交给spring -->
	    <init-param>
	        <param-name>targetFilterLifecycle</param-name>
	        <param-value>true</param-value>
	    </init-param>
	</filter>

	<filter-mapping>
	    <filter-name>shiroFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping> 

	
	<!-- 在tomcat启动的时候优先加载spring的配置文档 -->
	<listener> 
    	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> 
 	</listener> 
  
  <welcome-file-list>
  	<welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  <servlet-mapping>
  	<servlet-name>default</servlet-name>
  	<url-pattern>*.css</url-pattern>
  	<url-pattern>*.js</url-pattern>
  	<url-pattern>/image/*</url-pattern>
  	<url-pattern>*.jpg</url-pattern>
  	<url-pattern>*.png</url-pattern>
  </servlet-mapping>
  <filter>
  	<filter-name>Encoding</filter-name>
  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>utf-8</param-value>
  	</init-param>
  </filter>
  <filter-mapping>
  	<filter-name>Encoding</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>

  <servlet>
  	<servlet-name>spring</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>spring</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>

